See https://help.github.com/articles/ignoring-files/ for more about ignoring files.
------------------------------------
1. DEPENDENCIES & ARTIFACTS (NODE.JS)
------------------------------------
/node_modules
/.pnp
.pnp.*
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/versions

next.js output and cache
/.next/
/out/
/build # You also have /build here for general purpose

Vercel deployment files
.vercel

typescript artifacts
*.tsbuildinfo
next-env.d.ts

testing
/coverage

------------------------------------
2. DEPENDENCIES & ARTIFACTS (PYTHON/BACKEND)
------------------------------------
Virtual Environments (Common Python VENV names)
/venv
/env
pycache/

Python compiled files
*.pyc

------------------------------------
3. SECRETS / ENV FILES (CRITICAL SECURITY)
------------------------------------
Ignore all .env files in any folder (this is the safest approach)
.env
.env.*
!.env.example # Allow an example file, if you have one

Explicitly ignore common env files
backend/.env
frontend/.env

------------------------------------
4. MISC (OS Files and Logs)
------------------------------------
.DS_Store
.pem
npm-debug.log
yarn-debug.log*
yarn-error.log*
.pnpm-debug.log*